@model StorkDorkMain.Models.Sighting

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Bird Sighting</h4>
    <hr />
    <dl class="row">
        <!-- SduserId -->
        <dt class="col-sm-2">
            User ID
        </dt>
        <dd class="col-sm-10">
            @if (Model.SdUserId.HasValue)
            {
                @Model.SdUserId
            }
            else
            {
                <span>No User Recorded.</span>
            }
        </dd>

        <!-- Sduser Information (Optional) -->
        <dt class="col-sm-2">
            User
        </dt>
        <dd class="col-sm-10">
            @if (Model.SdUser != null)
            {
                @Model.SdUser.Id <!-- Replace "Name" with the actual property you want to display -->
            }
            else
            {
                <span>No User Information Available.</span>
            }
        </dd>

        <!-- Bird Species -->
        <dt class="col-sm-2">
            Bird Species
        </dt>
        <dd class="col-sm-10">
            @if (Model.BirdId.HasValue && Model.Bird != null)
            {
                @Model.Bird.CommonName
            }
            else
            {
                <span>N/A</span>
            }
        </dd>

        <!-- Location -->
        <dt class="col-sm-2">
            Location
        </dt>
        <dd class="col-sm-10">
            @{
                string latitude = Model.Latitude?.ToString("0.0000") ?? "NULL";
                string longitude = Model.Longitude?.ToString("0.0000") ?? "NULL";
                string locationKey = $"{latitude},{longitude}";

                string locationName = (latitude != "NULL" && longitude != "NULL" && ViewBag.PnwLocations.ContainsKey(locationKey))
                    ? ViewBag.PnwLocations[locationKey]
                    : "Unknown Location";
            }
            <strong>@locationName</strong> <br>
            <small>Coordinates: @locationKey</small>
        </dd>

        <!-- Date -->
        <dt class="col-sm-2">
            Date
        </dt>
        <dd class="col-sm-10">
            @if (Model.Date.HasValue)
            {
                @Model.Date.Value.ToShortDateString()
            }
            else
            {
                <span>No Date Recorded.</span>
            }
        </dd>

        <!-- Notes -->
        <dt class="col-sm-2">
            Notes
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                // Split the Notes field into user notes and weather conditions
                var notesParts = Model.Notes.Split(new[] { "|||" }, StringSplitOptions.RemoveEmptyEntries);
                var userNotes = notesParts.Length > 0 ? notesParts[0].Trim() : "";
                @userNotes
            }
            else
            {
                <span>No Notes Recorded</span>
            }
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>